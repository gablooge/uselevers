[tool.poetry]
name = "uselevers"
version = "0.1.0"
description = "Uselevers Backend"
authors = ["Samsul <samsulhadikediri@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.11"
uvicorn = {extras = ["standard"], version = "^0.29.0"}
fastapi = "^0.110.0"
python-multipart = "^0.0.9"
email-validator = "^2.1.1"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
tenacity = "^8.2.3"
pydantic = ">=2.6.4"
emails = "^0.6"
shortuuid = "^1.0.13"

gunicorn = "^21.2.0"
jinja2 = "^3.1.3"
alembic = "^1.13.1"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
httpx = "^0.27.0"
psycopg2-binary = "^2.9.9"
sqlalchemy = "^2.0.28"
# Pin bcrypt until passlib supports the latest
bcrypt = "4.1.2"
pydantic-settings = "^2.2.1"
sentry-sdk = {extras = ["fastapi"], version = "^1.43.0"}
poetry-plugin-dotenv = "^0.6.28"

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-alembic = "*"
coverage = "*"
mypy = "*"
ruff = "*"
pre-commit = "*"
types-python-jose = "*"
types-passlib = "*"
flake8 = "*"
black = "*"
autoflake = "*"
watchfiles = "*"
types-PyYAML = "*"
bandit = "*"
safety = "*"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
line_length = 88
[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.mypy]
strict = true
exclude = ["venv", "alembic"]

[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.poetry.scripts]
generate-openapi = "uselevers.helpers.generate_openapi:main"
